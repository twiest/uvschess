#summary presentation flow
  * What is UVSChess? (Thomas)
   
  * Demo !UvsChess using ExampleAI  (Rusty)
   * Start/Stop
   * History Pane
   * AI output window
   * Open/Save Fen
   
  * Show IChessAI (Rusty)
   * Show the 3 interface members that must be implemented
   
  * Show ExampleAI code (Thomas)
   * Everything that they'll need from the framework is shown in ExampleAI
   * Everything they'll need is in the !UvsChess namespace and in the top level directory.
   * Show Logging output to AI tab
   * Time limits, grace period
   * GC.Collect()
   * Static classes are ok, but avoid static variables.
   * Make sure to tell them to do a full build each time, otherwise their dlls won't get copied.
   * !UvsChess requires Visual Studio 2008

  * Show StudentAI project (Thomas)
   * Rename the project and your output dll name so they don't conflict.

  * Show !UvsChess project site (Rusty)
   * Show Wiki help pages
   * show mailing list
   * Show Downloads
   * show Issue Tracker   

  * Show them RuntAI (Thomas)
   * Show them errors and error messages that RuntAI displays

  * Decision Tree (Thomas)
   * Show it in viewer (Runt Mini-Max)
   * show horizon effect in RuntAI-!MiniMax in viewer
   * Wiki help page
   * Required for each assignment
  
  * Show assignment breakdown (Rusty)
   * Random
   * Greedy
   * !MiniMax

  * Profiler (Rusty)
   * Show it in ExampleAI
   * Show output in spreadsheet
   * Wiki page

  * Other tips (Both)
   * TEST, Re-TEST, and TEST some more!
   * Get it working first, THEN optimize
   * Compile in Release mode for competitions
   * Use source code control (svn, git, mercurial)